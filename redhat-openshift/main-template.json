{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "Base URL for Template FIles",
                "artifactsBaseUrl": ""
            },
            "defaultValue": "https://aztdrepo.blob.core.windows.net/openshift-v35-td"
        },
        "masterVmSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "allowedValues": [
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A9",
                "Standard_A10",
                "Standard_A11",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS5"
            ],
            "metadata": {
                "description": "OpenShift Master VM size"
            }
        },
        "nodeVmSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "allowedValues": [
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A9",
                "Standard_A10",
                "Standard_A11",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS5"
            ],
            "metadata": {
                "description": "OpenShift Node VM(s) size"
            }
        },
        "openshiftClusterPrefix": {
            "defaultValue": "opnsh",
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "metadata": {
                "description": "OpenShift cluster prefix.  Used to generate master, and node hostnames.  Maximum of 5 characters."
            }
        },
        "adminUsername": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "testuser",
            "metadata": {
                "description": "Administrator username on all VMs and first OpenShift Username"
            }
        },
        "cloudAccessUsername": {
            "type": "string",
            "defaultValue":"openshifttestdrive",
            "minLength": 1,
            "metadata": {
                "description": "Cloud Access Username"
            }
        },
        "cloudAccessPassword": {
            "type": "securestring",
            "defaultValue":"r3dhatd3ploy!",
            "minLength": 1,
            "metadata": {
                "description": "Cloud Access password"
            }
        },
        "cloudAccessPoolId": {
            "type": "string",
            "defaultValue":"8a85f981592353bd0159257750c95239",
            "minLength": 1,
            "metadata": {
                "description": "Pool ID with RHEL and OpenShift entitlements"
            }
        },
        "sshPublicKey": {
            "type": "securestring",
            "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8T46pA0uM64Yeis6DO9Q01g8lfvHMe4I4kpRW9u4QYiDL6jctLw6+Y1VHtROIYvuN4AHqBR7hQgAX3256Cu90EhmygWZglsVcKUBhir25NRuRM4qBcA+k1oBJt0EOKXZRDw6Efb/wLEcDtP2jnx7dOb9C7NewNNPCAEIOIvwfLechHAC7VcTe6cvqQ37r8TJpMz7WHZYhS4eyCajZt3KLbi+XciEWbucXISLPL4h+9RpVAkybmCkIfB08lX/wQ+d2O7Q0hOOLB6gU/49w/fkBmEjz13pRQcB5gV9ULbHIkP6Wn3mXYXGZm6rwzDHSC1BcxZy1erKqekhHtTMqZ6DZ imported-openssh-key",
            "metadata": {
                "description": "SSH public key on all VMs"
            }
        },
        "keyVaultResourceGroup": {
            "type": "string",
            "defaultValue": "bbtestos6",
            "minLength": 1,
            "metadata": {
                "description": "Resource Group that contains the Key Vault"
            }
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "bbopenshiftkeyvault6",
            "minLength": 1,
            "metadata": {
                "description": "Name of the Key Vault"
            }
        },
        "keyVaultSecret": {
            "type": "securestring",
            "minLength": 1,
            "defaultValue": "privatekey6",
            "metadata": {
                "description": "Key Vault Secret Name that contains the Private Key"
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "apiVersionCompute": "2015-06-15",
        "apiVersionNetwork": "2016-03-30",
        "apiVersionStorage": "2015-06-15",
        "apiVersionLinkTemplate": "2015-01-01",
        "namingInfix": "[toLower(parameters('openshiftClusterPrefix'))]",
        "openshiftMasterHostname": "[concat(variables('namingInfix'), 'm')]",
        "openshiftNodeHostname": "[concat(variables('namingInfix'), 'n')]",
        "newStorageAccountMaster": "[concat(uniqueString(concat(resourceGroup().name, 'msa', '0')), 'msa')]",
        "newStorageAccountNode": "[concat(uniqueString(concat(resourceGroup().name, 'nsa', '1')), 'nsa')]",
        "addressPrefix": "192.168.0.0/16",
        "masterSubnetPrefix": "192.168.1.0/24",
        "nodeSubnetPrefix": "192.168.2.0/24",
        "virtualNetworkName": "openshiftvnet",
        "masterSubnetName": "mastersubnet",
        "nodeSubnetName": "[concat(variables('openshiftNodeHostname'), 'subnet')]",
        "openshiftMasterPublicIpDnsLabel": "[concat(variables('openshiftMasterHostname'), 'dns', take(uniqueString(concat(resourceGroup().name, 'mdns')), 8))]",
        "nodeLbPublicIpDnsLabel": "[concat(variables('openshiftNodeHostname'), 'dns', take(uniqueString(concat(resourceGroup().name, 'ndns')), 8))]",
        "dataDiskSize": "128",
        "openshiftPassword": "password",
        "masterLoadBalancerName": "[concat(variables('openshiftMasterHostname'), 'lb')]",
        "masterPublicIpAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('openshiftMasterPublicIpDnsLabel'))]",
        "masterLbId": "[resourceId('Microsoft.Network/loadBalancers', variables('masterLoadBalancerName'))]",
        "masterLbFrontEndConfigId": "[concat(variables('masterLbId'), '/frontendIPConfigurations/loadBalancerFrontEnd')]",
        "masterLbBackendPoolId": "[concat(variables('masterLbId'),'/backendAddressPools/loadBalancerBackend')]",
        "masterLbHttpProbeId": "[concat(variables('masterLbId'),'/probes/httpProbe')]",
        "masterLb8443ProbeId": "[concat(variables('masterLbId'),'/probes/8443Probe')]",
        "nodeLoadBalancerName": "[concat(variables('openshiftNodeHostname'), 'lb')]",
        "nodePublicIpAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('nodeLbPublicIpDnsLabel'))]",
        "nodeLbId": "[resourceId('Microsoft.Network/loadBalancers', variables('nodeLoadBalancerName'))]",
        "nodeLbFrontEndConfigId": "[concat(variables('nodeLbId'), '/frontendIPConfigurations/loadBalancerFrontEnd')]",
        "nodeLbBackendPoolId": "[concat(variables('nodeLbId'),'/backendAddressPools/loadBalancerBackend')]",
        "nodeLbHttpProbeId": "[concat(variables('nodeLbId'),'/probes/httpProbe')]",
        "nodeLbHttpsProbeId": "[concat(variables('nodeLbId'),'/probes/httpsProbe')]",
        "osType": {
            "publisher": "RedHat",
            "offer": "RHEL",
            "sku": "7.3",
            "version": "latest"
        },
        "sshPrivateKey": {
            "reference": {
                "keyVault": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('keyVaultResourceGroup'), '/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
                },
                "secretName": "[parameters('keyVaultSecret')]"
            }
        },
        "imageReference": "[variables('osType')]",
        "sshKeyPath": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
        "nodePrepScriptUrl": "[concat(parameters('_artifactsLocation'), '/scripts/nodePrep.sh')]",
        "masterPrepScriptUrl": "[concat(parameters('_artifactsLocation'), '/scripts/masterPrep.sh')]",
        "nodePrepScriptFileName": "nodePrep.sh",
        "masterPrepScriptFileName": "masterPrep.sh",
        "openshiftDeploymentTemplateUrl": "[concat(parameters('_artifactsLocation'), '/nested/openshiftdeploy.json')]",
        "vmSizesMap": {
            "Standard_A4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A5": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A6": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A7": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A8": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A9": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A10": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A11": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D11": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D12": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D13": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D14": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D1_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D3_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D5_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D11_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D12_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D13_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D14_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G5": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_DS1": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS4": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS11": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS12": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS1_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS2_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS3_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS4_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS5_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS11_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS12_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS15_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS1": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS4": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS5": {
                "storageAccountType": "Premium_LRS"
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionNetwork')]",
            "tags": {
                "displayName": "VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('masterSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('masterSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('nodeSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('nodeSubnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('newStorageAccountMaster')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionStorage')]",
            "tags": {
                "displayName": "StorageAccounts"
            },
            "properties": {
                "accountType": "[variables('vmSizesMap')[parameters('masterVmSize')].storageAccountType]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('newStorageAccountNode')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionStorage')]",
            "tags": {
                "displayName": "StorageAccounts"
            },
            "properties": {
                "accountType": "[variables('vmSizesMap')[parameters('nodeVmSize')].storageAccountType]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('nodeLbPublicIpDnsLabel')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionNetwork')]",
            "tags": {
                "displayName": "OpenShiftNodeLBPublicIP"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[variables('nodeLbPublicIpDnsLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('openshiftMasterPublicIpDnsLabel')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionNetwork')]",
            "tags": {
                "displayName": "OpenShiftMasterPublicIP"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[variables('openshiftMasterPublicIpDnsLabel')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "masteravailabilityset",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionCompute')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "nodeavailabilityset",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionCompute')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('masterLoadBalancerName')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionNetwork')]",
            "tags": {
                "displayName": "OpenShiftMasterLB"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('openshiftMasterPublicIpDnsLabel'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('masterPublicIpAddressId')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "loadBalancerBackEnd"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "OpenShiftAdminConsole",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('masterLbFrontEndConfigId')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('masterLbBackendPoolId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 8443,
                            "backendPort": 8443,
                            "probe": {
                                "id": "[variables('masterLb8443ProbeId')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "8443Probe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 8443,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersionNetwork')]",
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "name": "[concat(variables('masterLoadBalancerName'), '/', 'SSH-', variables('openshiftMasterHostname'))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[variables('masterLbId')]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[variables('masterLbFrontEndConfigId')]"
                },
                "protocol": "tcp",
                "frontendPort": "2200",
                "backendPort": 22,
                "enableFloatingIP": false
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('nodeLoadBalancerName')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionNetwork')]",
            "tags": {
                "displayName": "OpenShiftNodeLB"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('nodeLbPublicIpDnsLabel'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('nodePublicIpAddressId')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "loadBalancerBackEnd"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "OpenShiftRouterHTTP",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('nodeLbFrontEndConfigId')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('nodeLbBackendPoolId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "probe": {
                                "id": "[variables('nodeLbHttpProbeId')]"
                            }
                        }
                    },
                    {
                        "name": "OpenShiftRouterHTTPS",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('nodeLbFrontEndConfigId')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('nodeLbBackendPoolId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "probe": {
                                "id": "[variables('nodeLbHttpsProbeId')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "httpProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    },
                    {
                        "name": "httpsProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 443,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('openshiftMasterHostname'), 'nic')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionNetwork')]",
            "tags": {
                "displayName": "OpenShiftMasterNetworkInterface"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('masterLoadBalancerName'))]",
                "[concat(variables('masterLbId'), '/inboundNatRules/SSH-', variables('openshiftMasterHostname'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('openshiftMasterHostname'), 'ipconfig')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('masterSubnetName'))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('masterLoadBalancerName'), '/backendAddressPools/loadBalancerBackEnd')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(variables('masterLbId'),'/inboundNatRules/SSH-', variables('openshiftMasterHostname'))]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('openshiftNodeHostname'), 'nic')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionNetwork')]",
            "tags": {
                "displayName": "OpenShiftNodeNetworkInterfaces"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('nodeLoadBalancerName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('openshiftNodeHostname'), 'ipconfig')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('nodeSubnetName'))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('nodeLoadBalancerName'), '/backendAddressPools/loadBalancerBackEnd')]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('openshiftMasterHostname'))]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionCompute')]",
            "tags": {
                "displayName": "OpenShiftMasterVirtualMachines"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('newStorageAccountMaster'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('openshiftMasterHostname'), 'nic')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'masteravailabilityset')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('masterVmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('openshiftMasterHostname'))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name": "[concat(variables('openshiftMasterHostname'), 'osdisk')]",
                        "vhd": {
                            "uri": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('newStorageAccountMaster')), variables('apiVersionStorage')).primaryEndpoints['blob'], 'vhds/'), variables('openshiftMasterHostname'), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(variables('openshiftMasterHostname'), '-docker-pool')]",
                            "diskSizeGB": "[variables('dataDiskSize')]",
                            "lun": 0,
                            "vhd": {
                                "uri": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('newStorageAccountMaster')), variables('apiVersionStorage')).primaryEndpoints['blob'], 'vhds/'), variables('openshiftMasterHostname'), '-docker-pool.vhd')]"
                            },
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('openshiftMasterHostname'), 'nic'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('openshiftNodeHostname')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionCompute')]",
            "tags": {
                "displayName": "OpenShiftNode"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('newStorageAccountNode'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('openshiftNodeHostname'), 'nic')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'nodeavailabilityset')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('nodeVmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('openshiftNodeHostname')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('sshPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name": "[concat(variables('openshiftNodeHostname'), 'osdisk')]",
                        "vhd": {
                            "uri": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('newStorageAccountNode')), variables('apiVersionStorage')).primaryEndpoints['blob'], 'vhds/'), variables('openshiftNodeHostname'), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(variables('openshiftNodeHostname'), '-docker-pool')]",
                            "diskSizeGB": "[variables('dataDiskSize')]",
                            "lun": 0,
                            "vhd": {
                                "uri": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('newStorageAccountNode')), variables('apiVersionStorage')).primaryEndpoints['blob'], 'vhds/'), variables('openshiftNodeHostname'), '-docker-pool.vhd')]"
                            },
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('openshiftNodeHostname'), 'nic'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('openshiftMasterHostname'), '/deployOpenShift')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionCompute')]",
            "tags": {
                "displayName": "PrepMaster"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('openshiftMasterHostname'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('masterPrepScriptUrl')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('bash ', variables('masterPrepScriptFileName'), ' ', parameters('cloudAccessUsername'), ' ', parameters('cloudAccessPassword'), ' ', parameters('cloudAccessPoolId'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('openshiftNodeHostname'), '/prepNodes')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('apiVersionCompute')]",
            "tags": {
                "displayName": "PrepNodes"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('openshiftNodeHostname'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('nodePrepScriptUrl')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('bash ', variables('nodePrepScriptFileName'), ' ', parameters('cloudAccessUsername'), ' ', parameters('cloudAccessPassword'), ' ', parameters('cloudAccessPoolId'))]"
                }
            }
        },
        {
            "name": "OpenShiftDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersionLinkTemplate')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('openshiftMasterHostname'), '/extensions/deployOpenShift')]",
                "[concat('Microsoft.Compute/virtualMachines/', variables('openshiftNodeHostname'), '/extensions/prepNodes')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('openshiftDeploymentTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "openshiftMasterHostname": {
                        "value": "[variables('openshiftMasterHostname')]"
                    },
                    "openshiftMasterPublicIpFqdn": {
                        "value": "[reference(variables('openshiftMasterPublicIpDnsLabel')).dnsSettings.fqdn]"
                    },
                    "openshiftMasterPublicIpAddress": {
                        "value": "[reference(variables('openshiftMasterPublicIpDnsLabel')).ipAddress]"
                    },
                    "openshiftNodeHostname": {
                        "value": "[variables('openshiftNodeHostname')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "openshiftPassword": {
                        "value": "[variables('openshiftPassword')]"
                    },
                    "xipioDomain": {
                        "value": "[concat(reference(variables('nodeLbPublicIpDnsLabel')).ipAddress, '.xip.io')]"
                    },
                    "sshPrivateKey": {
                        "reference": {
                            "keyVault": {
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('keyVaultResourceGroup'), '/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
                            },
                            "secretName": "[parameters('keyVaultSecret')]"
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "openshiftConsoleUrl": {
            "type": "string",
            "value": "[concat('https://', reference(variables('openshiftMasterPublicIpDnsLabel')).dnsSettings.fqdn, ':8443/console')]"
        },
        "openshiftNodeLoadBalancerFQDN": {
            "type": "string",
            "value": "[reference(variables('nodeLbPublicIpDnsLabel')).dnsSettings.fqdn]"
        },
        "OpenShiftUserandPassword": {
            "type": "string",
            "value": "[concat('OpenShift Username is: testdrive  --  Password is: ', variables('openshiftPassword'))]"
        }
    }
}