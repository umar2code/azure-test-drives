{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {},
    "variables": {
        "location": "centralus",
        "namingInfix": "cloudtap",
        "suffix": "[substring(uniqueString(resourceGroup().id) ,0, 10)]",
        "prefix": "chk",
        "virtualNetworkName": "[concat(variables('namingInfix'),'-vnet')]",
        "virtualNetworkAddressPrefix": "10.2.0.0/16",
        "subnetName1": "datapath-out-subnet",
        "subnetAddressSpace1": "10.2.1.0/24",
        "subnetName2": "capture-out-subnet",
        "subnetAddressSpace2": "10.2.2.0/24",
        "subnetName3": "datapath-in-subnet",
        "subnetAddressSpace3": "10.2.3.0/24",
        "subnetName4": "web-subnet",
        "subnetAddressSpace4": "10.2.4.0/24",
        "subnetName5": "db-subnet",
        "subnetAddressSpace5": "10.2.5.0/24",
        "subnetName6": "chk-subnet2",
        "subnetAddressSpace6": "10.2.55.0/24",
        "deploymentsApiVersion": "2015-01-01",
        "computeApiVersion": "2016-03-30",
        "networkApiVersion": "2016-03-30",
        "storageAccountsApiVersion": "2016-01-01",
        "publicIPAddressesApiVersion": "2015-06-15",
        "virtualNetworksApiVersion": "2015-06-15",
        "publicIPName": "[concat(variables('namingInfix'),'-pip')]",
        "dnsName": "[concat('brodns-',substring(uniqueString(resourceGroup().id), 0, 5))]",
        "publicIPAllocationMethod": "dynamic",
        "storageAccountPrefix": "[concat('ctsa',substring(uniqueString(resourceGroup().id), 0, 5))]",
        "storageAccountType": "Standard_LRS",
        "storageAccountKind": "storage",
        "publicIPId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]",
        "ipConfigName1": "[concat(variables('namingInfix'), '-ipconfig1')]",
        "ipConfigName2": "[concat(variables('namingInfix'), '-ipconfig2')]",
        "ipConfigName3": "[concat(variables('namingInfix'), '-ipconfig3')]",
        "sshPublicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAjNdCTvjxZHapoJqrGkVdwmtnQn67azWp15+THgdIVvY1CZI1ZjBlTJbso953u2lADApB93UIhqfsy+mKMoMSqhSWGvHQpQQ8RIjMcwVkDZv4xpAbA7myu8J3p2DL9KCbLEmDfYJ1APRb7szMZLctY6vwwL09E1tz4gBFD45YMKOscTSGLMThlKakELPvB+vjfTj2jtzu7rKieJDCYIRc957JRYHEpQkQ/Ed5HcdIJEFeYwky2sUjQajCrb6VsKNdJMbMkGYbmzratFbvIgt3DoUouO5kkJoOVl1hpQ6EjYe8KXuGXjY1sMKgCEj1KW8rNrCsr2i5wUEu5LYH3kd6VQ== rsa-key-20170323",
      
        "Check_PointTags": "30DE18BC-F9F6-4F22-9D30-54B8E74CFD5F",
        "check-PublicIPAddressName": "[concat(variables('prefix'),'-pip')]",
        "check-publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('check-PublicIPAddressName'))]",
        "check-nic1Name": "eth0-nic",
        "check-nic2Name": "eth1-nic",
        "check-storageAccountName": "[concat('check',substring(uniqueString(resourceGroup().id) ,0, 5))]",
        "check-vmName": "[concat(variables('prefix'),'-vm')]",
        "check-vmSize": "Standard_D3_v2",
        "installationType": "standalone",
        "sicKey": "Testdriveuser123",
        "bootstrapScript": "",
        "managementGUIClientNetwork": "0.0.0.0/0",
        "bootstrapScript64": "[base64(variables('bootstrapScript'))]",
        "customData": "[concat('#!/bin/bash\n', '\n', 'installationType=\"', variables('installationType'), '\"', '\n', '\n', 'boostrap=\"$(dirname $0)/bootstrap\"\n', 'base64 -d <<<\"', variables('bootstrapScript64'), '\" >\"$bootstrap\"', '\n', 'chmod +x \"$bootstrap\"\n', '\"$bootstrap\"\n', '\n', 'case \"$installationType\" in\n', 'gateway)\n', '    installSecurityGateway=true\n', '    installSecurityManagement=false\n', '    sicKey=\"', variables('sicKey'), '\"', '\n', '    ;;\n', 'management)\n', '    installSecurityGateway=false\n', '    installSecurityManagement=true\n', '    sicKey=notused\n', '    ;;\n', 'standalone | *)\n', '    installSecurityGateway=true\n', '    installSecurityManagement=true\n', '    sicKey=notused\n', '    ;;\n', 'esac\n', '\n', 'conf=\"install_security_gw=$installSecurityGateway\"\n', 'if $installSecurityGateway; then\n', '    conf=\"${conf}&install_ppak=true\"\n', '    conf=\"${conf}&gateway_cluster_member=false\"\n', 'fi\n', 'conf=\"${conf}&install_security_managment=$installSecurityManagement\"\n', 'if $installSecurityManagement; then\n', '    managementAdminPassword=\"$(dd if=/dev/urandom count=1 2>/dev/null | sha1sum | cut -c -28)\"\n', '\n', '    managementGUIClientNetwork=\"', variables('managementGUIClientNetwork'), '\"', '\n', '    ManagementGUIClientBase=\"$(echo $managementGUIClientNetwork | cut -d / -f 1)\"\n', '    ManagementGUIClientMaskLength=\"$(echo $managementGUIClientNetwork | cut -d / -f 2)\"\n', '\n', '    conf=\"${conf}&install_mgmt_primary=true\"\n', '    conf=\"${conf}&mgmt_admin_name=admin\"\n', '    conf=\"${conf}&mgmt_admin_passwd=$managementAdminPassword\"\n', '    conf=\"${conf}&mgmt_gui_clients_radio=network\"\n', '    conf=\"${conf}&mgmt_gui_clients_ip_field=$ManagementGUIClientBase\"\n', '    conf=\"${conf}&mgmt_gui_clients_subnet_field=$ManagementGUIClientMaskLength\"\n', 'fi\n', 'conf=\"${conf}&ftw_sic_key=$sicKey\"\n', '\n', 'config_system -s \"$conf\"\n', '\n', 'if $installSecurityGateway; then\n', '    shutdown -r now\n', 'fi\n')]",
        "vrouterVersion": {
            "v1": "latest",
            "v2": "1.5020002.0"
        },
        "imageReference": "[variables(concat('imageReference', variables('offer')))]",
        "vrVmSize": "Standard_F4",
        "osDiskName": "[concat(variables('namingInfix'), '-osdisk')]",
        "adminUsername": "testdrive",
        "adminPassword": "Testdriveuser123",
        "authenticationType": "password",
        "sshKeyPath": "[concat('/home/',variables('adminUsername'),'/.ssh/authorized_keys')]",
        "osprofile": {
            "password": {
                "computerName": "[variables('namingInfix')]",
                "adminUsername": "[variables('adminUsername')]",
                "adminPassword": "[variables('adminPassword')]",
                "linuxConfiguration": {
                    "disablePasswordAuthentication": false
                }
            },
            "sshPublicKey": {
                "computerName": "[variables('namingInfix')]",
                "adminUsername": "[variables('adminUsername')]",
                "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "ssh": {
                        "publicKeys": [
                            {
                                "path": "[variables('sshKeyPath')]",
                                "keyData": "[variables('sshPublicKey')]"
                            }
                        ]
                    }
                }
            },
            "both": {
                "computerName": "[variables('namingInfix')]",
                "adminUsername": "[variables('adminUsername')]",
                "adminPassword": "[variables('adminPassword')]",
                "linuxConfiguration": {
                    "disablePasswordAuthentication": false,
                    "ssh": {
                        "publicKeys": [
                            {
                                "path": "[variables('sshKeyPath')]",
                                "keyData": "[variables('sshPublicKey')]"
                            }
                        ]
                    }
                }
            }
        },
        "imageOffer": "check-point-r77-10",
        "imagePublisher": "checkpoint",
        "imageReferenceBYOL": {
            "offer": "[variables('imageOffer')]",
            "publisher": "[variables('imagePublisher')]",
            "sku": "sg-byol",
            "version": "latest"
        },
        "imageReferencePAYG": {
            "offer": "[variables('imageOffer')]",
            "publisher": "[variables('imagePublisher')]",
            "sku": "sg-ngtp",
            "version": "latest"
        },
        "offer": "PAYG",
        "plan": "[variables(concat('plan', variables('offer')))]",
        "planBYOL": {
            "name": "sg-byol",
            "product": "[variables('imageOffer')]",
            "publisher": "[variables('imagePublisher')]"
        },
        "planPAYG": {
            "name": "sg-ngtp",
            "product": "[variables('imageOffer')]",
            "publisher": "[variables('imagePublisher')]"
        },
        "web-publicIPName": "web-pip",
        "web-dnsName": "[concat('web-',substring(uniqueString(resourceGroup().id) ,0, 5))]",
        "db-publicIPName": "db-pip",
        "db-dnsName": "[concat('db-',substring(uniqueString(resourceGroup().id) ,0, 5))]",
        "web-nicName": "web-nic",
        "db-nicName": "db-nic",
        "web-vmName": "web-server",
        "db-vmName": "db-server"
    },
    "resources": [
        
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "[variables('virtualNetworksApiVersion')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "Microsoft.Network/routeTables/web-to-nic3-route-tbl",
                "Microsoft.Network/routeTables/db-to-nic3-route-tbl"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('virtualNetworkAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName1')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressSpace1')]"
                        }
                    },
                    {
                        "name": "[variables('subnetName2')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressSpace2')]"
                        }
                    },
                    {
                        "name": "[variables('subnetName3')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressSpace3')]"
                        }
                    },
                    {
                        "name": "[variables('subnetName4')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressSpace4')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', 'web-to-nic3-route-tbl')]"
                            }
                        }
                    },
                    {
                        "name": "[variables('subnetName5')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressSpace5')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', 'db-to-nic3-route-tbl')]"
                            }
                        }
                    },
                    {
                        "name": "[variables('subnetName6')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressSpace6')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPName')]",
            "apiVersion": "[variables('publicIPAddressesApiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('web-publicIPName')]",
            "apiVersion": "[variables('publicIPAddressesApiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('web-dnsName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('db-publicIPName')]",
            "apiVersion": "[variables('publicIPAddressesApiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('db-dnsName')]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('check-storageAccountName')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('storageAccountsApiVersion')]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "[variables('storageAccountKind')]"
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "name": "[variables('check-PublicIPAddressName')]",
            "properties": {
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[concat('vsecdns-', substring(uniquestring(resourceGroup().id, deployment().name),0,7))]"
                }
            },
            "tags": {
                "provider": "[toUpper(variables('Check_PointTags'))]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountPrefix')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('storageAccountsApiVersion')]",
            "tags": {
                "displayName": "vRouterStorageAccounts"
            },
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "[variables('storageAccountKind')]"
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('namingInfix'), '-nic1-datapath-out')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('ipConfigName1')]",
                        "properties": {
                            "privateIPAddress": "10.2.1.4",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', variables('subnetName1'))]"
                            },
                            "publicIpAddress": {
                                "Id": "[variables('publicIPId')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('namingInfix'), '-nic3-datapath-in')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('ipConfigName3')]",
                        "properties": {
                            "privateIPAddress": "10.2.3.4",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', variables('subnetName3'))]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('namingInfix'), '-nic2-capture-out')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('ipConfigName2')]",
                        "properties": {
                            "privateIPAddress": "10.2.2.4",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', variables('subnetName2'))]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/',variables('check-PublicIPAddressName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('check-nic1Name')]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.2.2.5",
                            "privateIPAllocationMethod": "Static",
                            "publicIpAddress": {
                                "Id": "[variables('check-publicIPAddressId')]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', variables('subnetName2'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('check-nic2Name')]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "privateIPAddress": "10.2.55.6",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', variables('subnetName6'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('namingInfix'), '-vm')]",
            "location": "[variables('location')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "tags": {
                "displayName": "vRouterVM"
            },
            "dependsOn": [
               
                "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefix'))]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('namingInfix'), '-nic1-datapath-out')]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('namingInfix'), '-nic2-capture-out')]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('namingInfix'), '-nic3-datapath-in')]"
            ],
            "plan": {
                "publisher": "brocade_communications",
                "product": "brocade-vrouter-5600",
                "name": "vrouter-5600"
            },
            "properties": {
                
                "hardwareProfile": {
                    "vmSize": "[variables('vrVmSize')]"
                },
                "osProfile": "[variables('osprofile')[variables('authenticationType')]]",
                "storageProfile": {
                    "imageReference": {
                        "publisher": "brocade_communications",
                        "offer": "brocade-vrouter-5600",
                        "sku": "vrouter-5600",
                        "version": "[variables('vrouterVersion').v1]"
                    },
                    "osDisk": {
                        "name": "[variables('osDiskName')]",
                        "vhd": {
                            "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', concat(variables('storageAccountPrefix'))), variables('storageAccountsApiVersion')).primaryEndpoints.blob, 'vhds/', variables('osDiskName'), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('namingInfix'), '-nic1-datapath-out'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('namingInfix'), '-nic2-capture-out'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('namingInfix'), '-nic3-datapath-in'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "[variables('computeApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('check-storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('check-nic1Name'))]",
                "[concat('Microsoft.Network/networkInterfaces/',variables('check-nic2Name'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('check-vmName')]",
            "plan": "[variables('plan')]",
            "properties": {
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('check-storageAccountName')), variables('storageAccountsApiVersion')).primaryEndpoints.blob]"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[variables('check-vmSize')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('check-nic1Name'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('check-nic2Name'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "osProfile": {
                    "adminUsername": "notused",
                    "adminPassword": "[variables('adminPassword')]",
                    "computername": "[variables('check-vmName')]",
                    "customData": "[base64(variables('customData'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false
                    }
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "diskSizeGB": 50,
                        "name": "osDisk",
                        "vhd": {
                            "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', variables('check-storageAccountName')), variables('storageAccountsApiVersion')).primaryEndpoints.blob, toLower(variables('check-vmName')), '-', uniqueString(resourceGroup().id, deployment().name), '/osDisk.vhd')]"
                        }
                    }
                }
            },
            "tags": {
                "provider": "[variables('Check_PointTags')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('web-nicName')]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "web-ipconfig",
                        "properties": {
                            "publicIpAddress": {
                                "Id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('web-publicIPName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', variables('subnetName4'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('db-nicName')]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "db-ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "Id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('db-publicIPName'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName')), '/subnets/', variables('subnetName5'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('web-nicName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('web-vmName')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D1_V2"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('web-nicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "adminPassword": "[variables('adminPassword')]",
                    "adminUsername": "[variables('adminUsername')]",
                    "computerName": "[variables('web-vmName')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": true
                    }
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "Windows",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "name": "osDisk",
                        "image": {
                            "uri": "https://brocadeapp.blob.core.windows.net/webimage/osImage/webosdisk-osDisk.383083c1-0283-45f1-a33f-670db38b3a45.vhd"
                        },
                        "vhd": {
                            "uri": "[concat('https://brocadeapp.blob.core.windows.net/web-',variables('suffix'),'/osDisk.',variables('suffix'),variables('suffix'),'.vhd')]"
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',variables('db-nicName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('db-vmName')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D1_V2"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('db-nicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "adminPassword": "[variables('adminPassword')]",
                    "adminUsername": "[variables('adminUsername')]",
                    "computerName": "[variables('db-vmName')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": true
                    }
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "Windows",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "name": "osDisk",
                        "image": {
                            "uri": "https://brocadeapp.blob.core.windows.net/dbimage/osImage/dbosdisk-osDisk.eb81b673-534a-4d23-84bc-2f11a77a1d16.vhd"
                        },
                        "vhd": {
                            "uri": "[concat('https://brocadeapp.blob.core.windows.net/db-',variables('suffix'),'/osDisk.',variables('suffix'),variables('suffix'),'.vhd')]"
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "web-to-nic3-route-tbl",
            "apiVersion": "2016-03-30",
            "location": "[variables('location')]",
            "properties": {
                "routes": [
                    {
                        "name": "web-to-nic3",
                        "properties": {
                            "addressPrefix": "10.2.5.0/24",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.2.3.4"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "db-to-nic3-route-tbl",
            "apiVersion": "2016-03-30",
            "location": "[variables('location')]",
            "properties": {
                "routes": [
                    {
                        "name": "db-to-nic3",
                        "properties": {
                            "addressPrefix": "10.2.4.0/24",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.2.3.4"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "cloudTap-ssh-PIP": {
            "type": "string",
            "value": "[reference(variables('publicIPId')).dnsSettings.fqdn]"
        },
        "cloudTap-VM-Username": {
            "type": "string",
            "value": "[variables('adminUsername')]"
        },
        "cloudTap-VM-Password": {
            "type": "string",
            "value": "[variables('adminPassword')]"
        },
        "checkpoint-ssh-PIP": {
            "type": "string",
            "value": "[reference(variables('check-publicIPAddressId')).dnsSettings.fqdn]"
        },
        "checkpoint-VM-Username": {
            "type": "string",
            "value": "admin"
        },
        "checkpoint-VM-Password": {
            "type": "string",
            "value": "[variables('adminPassword')]"
        },
        "url-access-app": {
            "type": "string",
            "value": "[reference(variables('web-publicIPName')).dnsSettings.fqdn]"
        },
        "sql-username": {
            "type": "string",
            "value": "ashuser"
        },
        "sql-password": {
            "type": "string",
            "value": "Ashpassword123"
        }
    }
}