{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUserName": {
            "type": "string",
            "defaultValue": "suse",
            "metadata": {
                "description": "User name for the Virtual Machine. Pick a valid username otherwise there will be a BadRequest error."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password. Pick a complex password with uppercase letters, lowercase letters, digits, and symbols. The password should not be longer than 16. Otherwise you'll get a BadRequest error."
            },
            "defaultValue": "Sysga1n@12345"
        },
        "hpcUserName": {
            "type": "string",
            "defaultValue": "hpc",
            "metadata": {
                "description": "User for running HPC applications with shared home directory and SSH public key authentication setup.  This user cannot login from outside the cluster. Pick a valid username otherwise there will be a BadRequest error."
            }
        },
        "osType": {
            "type": "string",
            "allowedValues": [
                "Windows",
                "Linux"
            ],
            "metadata": {
                "description": "This is the OS that your VM will be running"
            },
            "defaultValue": "Linux"
        },
        "headNodeSize": {
            "type": "string",
            "defaultValue": "Standard_A8",
            "allowedValues": [
                "Standard_A4",
                "Standard_A7",
                "Standard_A8",
                "Standard_A9",
                "Standard_A10",
                "Standard_A11",
                "Standard_D4",
                "Standard_D13",
                "Standard_D14",
                "Standard_DS4",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS5"
            ],
            "metadata": {
                "description": "Size of the head node."
            }
        },
        "workerNodeSize": {
            "type": "string",
            "defaultValue": "Standard_A8",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A9",
                "Standard_A10",
                "Standard_A11",
                "Standard_D1",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_DS1",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS5"
            ],
            "metadata": {
                "description": "Size of the worker nodes."
            }
        },
        "workerNodeCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "This template creates N worker node. Use workerNodeCount to specify that N."
            }
        },
        "dataDiskSize": {
            "type": "int",
            "defaultValue": 64,
            "metadata": {
                "description": "The size in GB of each data disk that is attached to the VM.  A RAID-0 volume is created with all data disks that is dataDiskSize * dataDiskCount in size."
            }
        }
    },
    "variables": {
        "uid": "[uniqueString(resourceGroup().id)]",
        "prefix": "[substring(variables('uid') ,0 ,5)]",
        "imagePublisher": "SUSE",
        "imageOffer": "SLES-HPC",
        "slesOSVersion": "12",
        "newStorageAccountName": "[concat('st', uniqueString(resourceGroup().id))]",
        "vmStorageAccountContainerName": "vhds",
        "OSDiskName": "osdisk",
        "publicIPAddressType": "Dynamic",
        "publicIPAddressName": "[concat(variables('prefix'),'publicipname')]",
        "dnsNameForPublicIP": "[concat('susehpc',variables('prefix'),'publicipdns')]",
        "masterVMName": "master",
        "workerVMName": "worker",
        "armApiVersion": "2015-06-15",
        "location": "northcentralus",
        "nicName": "nic",
        "networkSettings": {
            "virtualNetworkName": "virtualnetwork",
            "addressPrefix": "10.32.0.0/16",
            "subnet": {
                "dse": {
                    "name": "dse",
                    "prefix": "10.32.0.0/24",
                    "vnet": "virtualnetwork"
                }
            },
            "statics": {
                "workerRange": {
                    "base": "10.32.0.",
                    "start": 5
                },
                "master": "10.32.0.254"
            }
        },
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('networkSettings').virtualNetworkName)]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('networkSettings').subnet.dse.name)]",
        "templateBaseUrl": "https://susehpcnc1.blob.core.windows.net/file/",
        "installationCLI": "[concat('bash azuredeploy.sh ', variables('masterVMName'), ' ', variables('workerVMName'), ' ', parameters('workerNodeCount'), ' ', parameters('hpcUserName'), ' ', variables('templateBaseUrl'))]",
        "storageAccountType": "Standard_LRS"
    },
    "outputs": {
        "master node dns": {
            "type": "string",
            "value": "[concat(variables('dnsNameForPublicIP'), '.', variables('location'), '.cloudapp.azure.com')]"
        },
        "Worker0 IP Address": {
            "type": "string",
            "value": "Private IP address for worker0 is 10.32.0.5 and hostname is worker0"
        },
        "username": {
            "type": "string",
            "value": "[parameters('adminUserName')]"
        },
        "password": {
            "type": "string",
            "value": "[parameters('adminPassword')]"
        },
        "Command for MPI Benchmark": {
            "type": "string",
            "value": "/opt/intel/impi/5.1.3.181/bin64/mpirun -hosts worker0 -ppn 1 -n 2 -env I_MPI_FABRICS=dapl -env I_MPI_DAPL_PROVIDER=ofa-v2-ib0 -env I_MPI_DYNAMIC_CONNECTION=0 /opt/intel/impi/5.1.3.181/bin64/IMB-MPI1 pingpong"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('newStorageAccountName')]",
            "apiVersion": "[variables('armApiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "[variables('armApiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('networkSettings').virtualNetworkName]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('networkSettings').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('networkSettings').subnet.dse.name]",
                        "properties": {
                            "addressPrefix": "[variables('networkSettings').subnet.dse.prefix]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "[variables('armApiVersion')]",
            "name": "[variables('publicIPAddressName')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsNameForPublicIP')]"
                }
            }
        },
        {
            "apiVersion": "[variables('armApiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('networkSettings').virtualNetworkName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('networkSettings').statics.master]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('armApiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('masterVMName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('headNodeSize')]"
                },
                "osProfile": {
                    "computername": "[variables('masterVMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "[parameters('osType')]",
                        "name": "[concat(variables('masterVMName'),'-osDisk')]",
                        "image": {
                            "uri": "https://susestracnt.blob.core.windows.net/vhds/osImage/susehpc2image-osDisk.cb435247-07e3-47b3-8cf4-da2704177990.vhd"
                            
                        },
                        "vhd": {
                            "uri": "[concat('https://susestracnt.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('masterVMName'),'_',variables('prefix'),'_',variables('OSDiskName'),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "[variables('armApiVersion')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('masterVMName'), '/Installation')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.3",
                "settings": {
                    "fileUris": [
                        "[concat(variables('templateBaseUrl'), 'azuredeploy.sh')]"
                    ],
                    "commandToExecute": "[variables('installationCLI')]"
                }
            }
        },
        {
            "apiVersion": "[variables('armApiVersion')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('workerVMName'), copyindex(), '/Installation')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMName'),'/extensions/Installation')]",
                "[concat('Microsoft.Compute/virtualMachines/', variables('workerVMName'), copyindex())]"
            ],
            "copy": {
                "name": "foo",
                "count": "[parameters('workerNodeCount')]"
            },
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.3",
                "settings": {
                    "fileUris": [
                        "[concat(variables('templateBaseUrl'), 'azuredeploy.sh')]"
                    ],
                    "commandToExecute": "[variables('installationCLI')]"
                }
            }
        },
        {
            "apiVersion": "[variables('armApiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), 'worker', copyindex())]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('networkSettings').virtualNetworkName)]"
            ],
            "copy": {
                "name": "foo",
                "count": "[parameters('workerNodeCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(variables('networkSettings').statics.workerRange.base, copyindex(variables('networkSettings').statics.workerRange.start))]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('armApiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('workerVMName'), copyindex())]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), 'worker', copyindex())]"
            ],
            "copy": {
                "name": "foo",
                "count": "[parameters('workerNodeCount')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('workerNodeSize')]"
                },
                "osProfile": {
                    "computername": "[concat(variables('workerVMName'), copyindex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(variables('workerVMName'),'-osDisk')]",
                        "osType": "[parameters('osType')]",
                        "image": {
                            "uri": "https://susestracnt.blob.core.windows.net/vhds/osImage/susehpc2image-osDisk.cb435247-07e3-47b3-8cf4-da2704177990.vhd"
                        },
                        "vhd": {
                            "uri": "[concat('https://susestracnt.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('workerVMName'),'_',variables('prefix'),'_',variables('OSDiskName'),copyindex(),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), 'worker', copyindex()))]"
                        }
                    ]
                }
            }
        }
    ]
}
